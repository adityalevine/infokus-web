Index: src/service/transaction-service.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/transaction-service.js b/src/service/transaction-service.js
new file mode 100644
--- /dev/null	(date 1729516970871)
+++ b/src/service/transaction-service.js	(date 1729516970871)
@@ -0,0 +1,39 @@
+import { Validation } from "../validation/validation.js";
+import { TransactionValidation } from "../validation/transaction-validation.js";
+import { prisma } from "../application/db.js";
+
+export class TransactionService {
+  static async isReservationExist(reservationId) {
+    const reservation = await prisma.reservation.findUnique({
+      where: {
+        id: reservationId,
+        expiredAt: null,
+        cancelledAt: null,
+      },
+    });
+
+    if (!reservation) {
+      throw new Error("Reservasi tidak ditemukan");
+    }
+
+    return reservation;
+  }
+
+  static async create(request) {
+    const createTransactionRequest = Validation.validate(
+      TransactionValidation.CREATE,
+      request,
+    );
+
+    await this.isReservationExist(createTransactionRequest.reservationId);
+
+    const transaction = await prisma.transaction.create({
+      data: {
+        reservationId: createTransactionRequest.reservationId,
+        paymentStatus: createTransactionRequest.paymentStatus,
+      },
+    });
+
+    const transaction_detail = await prisma.transactionDetail.create({});
+  }
+}
Index: src/validation/transaction-validation.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/validation/transaction-validation.js b/src/validation/transaction-validation.js
new file mode 100644
--- /dev/null	(date 1729516640446)
+++ b/src/validation/transaction-validation.js	(date 1729516640446)
@@ -0,0 +1,16 @@
+import { z } from "zod";
+
+export class TransactionValidation {
+  static CREATE = z.object({
+    reservationId: z
+      .number({
+        required_error: "ID Reservasi tidak boleh kosong",
+      })
+      .min(1, "ID Reservasi tidak boleh kosong")
+      .int()
+      .positive("ID Reservasi harus positif"),
+    paymentStatus: z.enum(["unpaid", "downpayment", "paid"], {
+      required_error: "Status pembayaran tidak boleh kosong",
+    }),
+  });
+}
